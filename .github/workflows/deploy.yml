on: [push, pull_request]
name: Deploy project
jobs:
  build:
    name: Build release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: "Compute SHA"
        id: sha
        run: echo "::set-output name=sha7::$(echo ${GITHUB_SHA} | cut -c1-7)"

      - name: Install dependencies
        run: composer install --no-ansi --no-dev --no-interaction --no-progress --optimize-autoloader

      - name: Compress release
        run: tar -cvf release-${{ steps.sha.outputs.sha7 }}.tar --exclude=.editorconfig --exclude=.github --exclude=.git --exclude=.gitignore --exclude=.gitattributes --exclude=example.phpunit.xml --exclude=phpmd.xml --exclude=README.md --exclude=web/.csslintrc --exclude=web/.eslintignore --exclude=web/.eslintrc.json --exclude=web/.example.gitignore --exclude=web/.gitignore --exclude=web/.ht.router.php --exclude=web/example.gitignore --exclude=web/INSTALL.txt --exclude=web/README.md --exclude=web/update.php --exclude=web/web.config --exclude=web/modules/README.txt --exclude=web/profiles/README.txt --exclude=web/themes/README.txt --exclude=web/sites/development.services.yml --exclude=web/sites/example.settings.local.php --exclude=web/sites/example.sites.php --exclude=web/sites/example.sites.php --exclude=web/sites/README.txt .

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: release-${{ steps.sha.outputs.sha7 }}.tar
          path: ./release-${{ steps.sha.outputs.sha7 }}.tar

  deploy:
    name: Deploy release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: "Compute SHA"
        id: sha
        run: echo "::set-output name=sha7::$(echo ${GITHUB_SHA} | cut -c1-7)"

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: release-${{ steps.sha.outputs.sha7 }}.tar
          path: ./release-${{ steps.sha.outputs.sha7 }}.tar

      - name: test
        run: ls -lsah
