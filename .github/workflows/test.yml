on: [push, pull_request]
name: Tests and code
jobs:
  qa:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Validate composer.json and composer.lock
        run: composer validate --ansi --strict

      - name: Determine composer cache directory
        uses: "ergebnis/.github/actions/composer/determine-cache-directory@1.4.0"

      - name: Cache dependencies installed with composer
        uses: actions/cache@v3
        with:
          path: "${{ env.COMPOSER_CACHE_DIR }}"
          key: "php-${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-${{ hashFiles('composer.lock') }}"
          restore-keys: "php-${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-"

      - name: Install dependencies
        run: composer install

      - name: Check - PHP MD on modules
        run: ./vendor/bin/phpmd  web/modules/custom/ xml phpmd.xml

      - name: Check - PHP MD on theme
        run: ./vendor/bin/phpmd  web/themes/custom/ xml phpmd.xml

      - name: Check - PHP Code Sniffer
        run: ./vendor/bin/phpcs --standard=Drupal,DrupalPractice --extensions=php,module,inc,install,test,profile,theme,css,info,txt,md,yml web/modules/custom/ web/themes/custom/

  testing:
    runs-on: ubuntu-latest
    services:
      mariadb:
        image: mariadb:latest
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: drupal9ci
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Validate composer.json and composer.lock
        run: composer validate --ansi --strict

      - name: Determine composer cache directory
        uses: "ergebnis/.github/actions/composer/determine-cache-directory@1.4.0"

      - name: Cache dependencies installed with composer
        uses: actions/cache@v3
        with:
          path: "${{ env.COMPOSER_CACHE_DIR }}"
          key: "php-${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-${{ hashFiles('composer.lock') }}"
          restore-keys: "php-${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-"

      - name: Install dependencies
        run: composer install

      - name: Install Drupal
        run: ./vendor/bin/drush site:install --db-url=mysql://root:root@127.0.0.1/drupal --existing-config -y

      - name: Execute tests
        run: |
          cp example.phpunit.xml phpunit.xml
          ./vendor/bin/phpunit web/modules/custom
